# Configuration:
#
# Parent infra/parent1 (parent1.com):
#   - Delegate /anything/team1 to team1 namespace
#   - Delegate /anything/team2 to team2 namespace
#
# Parent infra/parent2 (parent2.com):
#   - Delegate /anything/team1 to team1 namespace
#   - Delegate /anything/team2 to team2 namespace
#
# Child team1/svc1:
#   - Route /anything/team1/foo to team1/svc1
#   - Prefer child's transformation policy
#
# Child team2/svc2:
#   - Route /anything/team2/foo to team2/svc2
#   - Prefer parent's transformation policy
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: parent1
  namespace: infra
  annotations:
    kgateway.dev/inherited-policy-priority: DeepMergePreferChild
spec:
  parentRefs:
  - name: http-gateway
  hostnames:
  - "parent1.com"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /anything/team1
    backendRefs:
    - group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: "*"
      namespace: team1
  - matches:
    - path:
        type: PathPrefix
        value: /anything/team2
    backendRefs:
    - group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: "*"
      namespace: team2
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: parent2
  namespace: infra
  annotations:
    kgateway.dev/inherited-policy-priority: DeepMergePreferParent  
spec:
  parentRefs:
  - name: http-gateway
  hostnames:
  - "parent2.com"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /anything/team1
    backendRefs:
    - group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: "*"
      namespace: team1
  - matches:
    - path:
        type: PathPrefix
        value: /anything/team2
    backendRefs:
    - group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: "*"
      namespace: team2
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: svc1
  namespace: team1
spec:
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /anything/team1/foo
    backendRefs:
    - name: svc1
      port: 8000
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: svc2
  namespace: team2
spec:
  rules:
  - matches:
    - path:
        type: Exact
        value: /anything/team2/foo
    backendRefs:
    - name: svc2
      port: 8000
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: parent1-transform
  namespace: infra
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: parent1
  transformation:
    response:
      add:
      - name: origin
        value: parent1
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: parent2-transform
  namespace: infra
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: parent2
  transformation:
    response:
      add:
      - name: origin
        value: parent2
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: svc1-transform
  namespace: team1
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: svc1
  transformation:
    response:
      add:
      - name: origin
        value: svc1              
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: svc2-transform
  namespace: team2
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: svc2
  transformation:
    response:
      add:
      - name: origin
        value: svc2           