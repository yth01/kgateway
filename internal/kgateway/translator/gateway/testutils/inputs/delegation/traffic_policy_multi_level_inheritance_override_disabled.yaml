# This test consists of 3 routes (parent, child, grandchild) and 3 traffic policies
# (transformation, rate limit, and rate limit + ext proc), each targeting a different
# route.
#
# Input:
# - Parent infra/example-route:
#   - Delegate /a to routes in "a-root" namespace
#   - Everything else goes to infra/example-svc
# - Child a-root/route-a-root:
#   - Delegate /a/1 to routes in "a" namespace
# - Child a/route-a:
#   - /a/1 goes to a/svc-a
# - TrafficPolicy infra/example-policy:
#   - specifies response transformation
#   - targetRef points to infra/example-route
# - TrafficPolicy a-root/route-a-root-policy:
#   - specifies local rate limit
#   - specifies response transformation that cannot override example-policy attached to patent route
#   - targetRef points to a-root/route-a-root
# - TrafficPolicy a/route-a-policy:
#   - specifies local rate limit and ext proc
#   - targetRef points to a/route-a
#
# Expected output routes:
# - /a/1 -> a/svc-a, has:
#   - transformation specified by infra/example-policy
#   - local rate limit specified by a-root/route-a-root-policy (overrides the rate limit from a/route-a-policy)
#   - ext proc specified by a/route-a-policy
# - /* -> infra/example-svc, has transformation specified by infra/example-policy
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: example-route
  namespace: infra
  annotations:
    kgateway.dev/inherited-policy-priority: ShallowMergePreferParent
spec:
  parentRefs:
  - name: example-gateway
  hostnames:
  - "example.com"
  rules:
  - backendRefs:
    - name: example-svc
      port: 80
  - matches:
    - path:
        type: PathPrefix
        value: /a
    backendRefs:
    - group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: "*"
      namespace: a-root
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: route-a-root
  namespace: a-root
  annotations:
    kgateway.dev/inherited-policy-priority: ShallowMergePreferParent  
spec:
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /a/1
    backendRefs:
    - group: gateway.networking.k8s.io
      kind: HTTPRoute
      name: "*"
      namespace: a
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: route-a
  namespace: a
spec:
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /a/1
    backendRefs:
    - name: svc-a
      port: 8080
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: example-policy
  namespace: infra
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: example-route
  transformation:
    response:
      add:
      - name: abc
        value: custom-value-abc
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: route-a-root-policy
  namespace: a-root
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: route-a-root
  transformation:
    response:
      add:
      - name: should-be-ignored
        value: should-be-ignored
  rateLimit:
    local:
      tokenBucket:
        maxTokens: 11
        tokensPerFill: 2
        fillInterval: 33s
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: route-a-policy
  namespace: a
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: route-a
  transformation:
    response:
      add:
      - name: should-be-ignored
        value: should-be-ignored
  rateLimit:
    local:
      tokenBucket:
        maxTokens: 44
        tokensPerFill: 5
        fillInterval: 66s
  extProc:
    extensionRef:
      name: extproc-ext
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: GatewayExtension
metadata:
  name: extproc-ext
  namespace: a
spec:
  type: ExtProc
  extProc:
    grpcService:
      backendRef:
        name: extproc
        port: 9091
---
apiVersion: v1
kind: Service
metadata:
  name: extproc
  namespace: a
spec:
  ports:
  - port: 9091
    protocol: TCP
    appProtocol: kubernetes.io/h2c
    targetPort: 9091
  selector:
    app: extproc
