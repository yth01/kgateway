// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// AiExtensionTracingApplyConfiguration represents a declarative configuration of the AiExtensionTracing type for use
// with apply.
type AiExtensionTracingApplyConfiguration struct {
	Endpoint    *string `json:"endpoint,omitempty"`
	Insecure    *bool   `json:"insecure,omitempty"`
	ServiceName *string `json:"serviceName,omitempty"`
}

// AiExtensionTracingApplyConfiguration constructs a declarative configuration of the AiExtensionTracing type for use with
// apply.
func AiExtensionTracing() *AiExtensionTracingApplyConfiguration {
	return &AiExtensionTracingApplyConfiguration{}
}

// WithEndpoint sets the Endpoint field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Endpoint field is set to the value of the last call.
func (b *AiExtensionTracingApplyConfiguration) WithEndpoint(value string) *AiExtensionTracingApplyConfiguration {
	b.Endpoint = &value
	return b
}

// WithInsecure sets the Insecure field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Insecure field is set to the value of the last call.
func (b *AiExtensionTracingApplyConfiguration) WithInsecure(value bool) *AiExtensionTracingApplyConfiguration {
	b.Insecure = &value
	return b
}

// WithServiceName sets the ServiceName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ServiceName field is set to the value of the last call.
func (b *AiExtensionTracingApplyConfiguration) WithServiceName(value string) *AiExtensionTracingApplyConfiguration {
	b.ServiceName = &value
	return b
}
