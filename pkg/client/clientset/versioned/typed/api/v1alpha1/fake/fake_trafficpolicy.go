// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	apiv1alpha1 "github.com/kgateway-dev/kgateway/v2/api/applyconfiguration/api/v1alpha1"
	v1alpha1 "github.com/kgateway-dev/kgateway/v2/api/v1alpha1"
	typedapiv1alpha1 "github.com/kgateway-dev/kgateway/v2/pkg/client/clientset/versioned/typed/api/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeTrafficPolicies implements TrafficPolicyInterface
type fakeTrafficPolicies struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.TrafficPolicy, *v1alpha1.TrafficPolicyList, *apiv1alpha1.TrafficPolicyApplyConfiguration]
	Fake *FakeGatewayV1alpha1
}

func newFakeTrafficPolicies(fake *FakeGatewayV1alpha1, namespace string) typedapiv1alpha1.TrafficPolicyInterface {
	return &fakeTrafficPolicies{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.TrafficPolicy, *v1alpha1.TrafficPolicyList, *apiv1alpha1.TrafficPolicyApplyConfiguration](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("trafficpolicies"),
			v1alpha1.SchemeGroupVersion.WithKind("TrafficPolicy"),
			func() *v1alpha1.TrafficPolicy { return &v1alpha1.TrafficPolicy{} },
			func() *v1alpha1.TrafficPolicyList { return &v1alpha1.TrafficPolicyList{} },
			func(dst, src *v1alpha1.TrafficPolicyList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.TrafficPolicyList) []*v1alpha1.TrafficPolicy {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.TrafficPolicyList, items []*v1alpha1.TrafficPolicy) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
